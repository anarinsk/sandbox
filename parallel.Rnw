\documentclass{article}
\begin{document}

<<cache=FALSE>>=
require(doSNOW)
library(foreach)
registerDoSNOW(makeCluster(4, type = "SOCK"))
getDoParWorkers()
@

When cache=TRUE, function defined in the same chunk can be
successfully exported automatically by foreach:

<<test, cache=TRUE>>=
set.seed(100)
m <- matrix(rnorm(400), 200, 2)
myMean <- function(x) mean(x)

time <- system.time(res <- foreach(i=1:nrow(m), .combine='c') %dopar%
{
 myMean(m[i,])
})
res[1:3]
apply(m[1:3, ], 1, mean)
@

However, if the user defined function is not within the same chunk,
foreach cannot export this function:
<<test2, cache=TRUE>>=
time <- system.time(res2 <- foreach(i=1:nrow(m), .combine='c') %dopar%
{
 myMean(m[i,])
})
res2[1:3]
apply(m[1:3, ], 1, mean)
@

Mannually exporting the user defined function and data works fine:
<<test3, cache=TRUE>>=
time <- system.time(res3 <-
foreach(i=1:nrow(m), .combine='c', .export=c('myMean','m')) %dopar% {
 myMean(m[i,])
})
res3[1:3]
apply(m[1:3, ], 1, mean)
@

If cache=FALSE, everything is fine:

<<test4>>=
time <- system.time(res4 <- foreach(i=1:nrow(m), .combine='c') %dopar%
{
 myMean(m[i,])
})
res4[1:3]
apply(m[1:3, ], 1, mean)
@


\end{document}